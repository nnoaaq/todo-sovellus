{"version":3,"sources":["tehtava.js","App.js","index.js"],"names":["tehtava","dispatch","className","style","color","valmis","nimi","onClick","tyyppi","TOIMINNOT","VALMIS","payload","id","icon","faCheckCircle","POISTO","faTimes","LISAYS","Sovellus","uusiTehtava","Date","now","useReducer","tehtavat","toiminto","filter","map","localStorage","getItem","console","log","JSON","parse","useState","asetaNimi","useEffect","setItem","stringify","onSubmit","e","preventDefault","length","placeholder","type","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"4NAIe,SAASA,EAAT,GAAyC,IAAtBA,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACzC,OACE,sBAAKC,UAAU,UAAf,UACE,oBAAIC,MAAO,CAAEC,MAAOJ,EAAQK,OAAS,QAAU,OAA/C,SACGL,EAAQM,OAEX,sBAAKJ,UAAU,WAAf,UACE,wBACEK,QAAS,WACPN,EAAS,CAAEO,OAAQC,EAAUC,OAAQC,QAAS,CAAEC,GAAIZ,EAAQY,OAFhE,SAKE,cAAC,IAAD,CAAiBC,KAAMC,QAEzB,wBACEP,QAAS,WACPN,EAAS,CAAEO,OAAQC,EAAUM,OAAQJ,QAAS,CAAEC,GAAIZ,EAAQY,OAFhE,SAKE,cAAC,IAAD,CAAiBC,KAAMG,c,UCnBpBP,EAAS,aACpBQ,OAAQ,SACRF,OAAQ,SACRL,OAAQ,UAHY,SAIZ,UAEK,SAASQ,IAmBtB,SAASC,EAAYb,GACnB,MAAO,CAAEM,GAAIQ,KAAKC,MAAOf,KAAMA,EAAMD,QAAQ,GAU/C,MAA6BiB,sBA7B7B,SAAiBC,EAAUC,GACzB,OAAQA,EAAShB,QACf,KAAKC,EAAUQ,OACb,MAAM,GAAN,mBAAWM,GAAX,CAAqBJ,EAAYK,EAASb,QAAQL,QACpD,KAAKG,EAAUM,OACb,OAAOQ,EAASE,QAAO,SAACzB,GAAD,OAAaA,EAAQY,KAAOY,EAASb,QAAQC,MACtE,KAAKH,EAAUC,OACb,OAAOa,EAASG,KAAI,SAAC1B,GACnB,OAAIA,EAAQY,KAAOY,EAASb,QAAQC,GAC3B,2BAAKZ,GAAZ,IAAqBK,QAASL,EAAQK,SAEjCL,KAGX,QACE,OAAOuB,KAO6B,MAApCI,aAAaC,QAAQ,YAChB,IAEPC,QAAQC,IAAI,WACLC,KAAKC,MAAML,aAAaC,QAAQ,eAG3C,mBAAOL,EAAP,KAAiBtB,EAAjB,KACA,EAA0BgC,mBAAS,IAAnC,mBAAO3B,EAAP,KAAa4B,EAAb,KAaA,OAXAC,qBAAU,WACRR,aAAaS,QAAQ,WAAYL,KAAKM,UAAUd,MAC/C,CAACA,IAUF,qCACE,qBAAKrB,UAAW,SAAhB,SACE,uBAAMoC,SAXZ,SAAsBC,GACpBA,EAAEC,iBACElC,EAAKmC,QAAU,IACjBxC,EAAS,CAAEO,OAAQC,EAAUQ,OAAQN,QAAS,CAAEL,KAAMA,KACtD4B,EAAU,MAOR,UACE,uBACEQ,YAAY,4BACZC,KAAK,OACLC,MAAOtC,EACPuC,SAAU,SAACN,GAAD,OAAOL,EAAUK,EAAEO,OAAOF,UAEtC,wBAAQD,KAAM,SAAd,+BAGHpB,EAASG,KAAI,SAAC1B,GACb,OACE,cAAC,EAAD,CAA0BA,QAASA,EAASC,SAAUA,GAAxCD,EAAQY,UCjEhCmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,e","file":"static/js/main.80738cc3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { TOIMINNOT } from \"./App.js\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nexport default function tehtava({ tehtava, dispatch }) {\r\n  return (\r\n    <div className=\"tehtava\">\r\n      <h4 style={{ color: tehtava.valmis ? \"green\" : \"red\" }}>\r\n        {tehtava.nimi}\r\n      </h4>\r\n      <div className=\"buttonit\">\r\n        <button\r\n          onClick={() => {\r\n            dispatch({ tyyppi: TOIMINNOT.VALMIS, payload: { id: tehtava.id } });\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faCheckCircle} />\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            dispatch({ tyyppi: TOIMINNOT.POISTO, payload: { id: tehtava.id } });\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faTimes} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect, useReducer } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Tehtava from \"./tehtava.js\";\nimport \"./tyylit.css\";\nexport const TOIMINNOT = {\n  LISAYS: \"lisays\",\n  POISTO: \"poisto\",\n  VALMIS: \"valmis\",\n  POISTO: \"poisto\",\n};\nexport default function Sovellus() {\n  function reducer(tehtavat, toiminto) {\n    switch (toiminto.tyyppi) {\n      case TOIMINNOT.LISAYS:\n        return [...tehtavat, uusiTehtava(toiminto.payload.nimi)];\n      case TOIMINNOT.POISTO:\n        return tehtavat.filter((tehtava) => tehtava.id !== toiminto.payload.id);\n      case TOIMINNOT.VALMIS:\n        return tehtavat.map((tehtava) => {\n          if (tehtava.id === toiminto.payload.id) {\n            return { ...tehtava, valmis: !tehtava.valmis };\n          }\n          return tehtava;\n        });\n\n      default:\n        return tehtavat;\n    }\n  }\n  function uusiTehtava(nimi) {\n    return { id: Date.now(), nimi: nimi, valmis: false };\n  }\n  function aloitusTlanne() {\n    if (localStorage.getItem(\"tehtavat\") == null) {\n      return [];\n    } else {\n      console.log(\"täys\");\n      return JSON.parse(localStorage.getItem(\"tehtavat\"));\n    }\n  }\n  const [tehtavat, dispatch] = useReducer(reducer, aloitusTlanne());\n  const [nimi, asetaNimi] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"tehtavat\", JSON.stringify(tehtavat)); //localstorageen uusin muutos, aina kun tehtavat muuttuu\n  }, [tehtavat]);\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (nimi.length >= 1) {\n      dispatch({ tyyppi: TOIMINNOT.LISAYS, payload: { nimi: nimi } });\n      asetaNimi(\"\");\n    }\n  }\n\n  return (\n    <>\n      <div className={\"lisays\"}>\n        <form onSubmit={handleSubmit}>\n          <input\n            placeholder=\"Syötä tehtävä\"\n            type=\"text\"\n            value={nimi}\n            onChange={(e) => asetaNimi(e.target.value)}\n          />\n          <button type={\"submit\"}>Lähetä</button>\n        </form>\n      </div>\n      {tehtavat.map((tehtava) => {\n        return (\n          <Tehtava key={tehtava.id} tehtava={tehtava} dispatch={dispatch} />\n        );\n      })}\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"sovellus\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}